#!/bin/sh

#
# Test writing to a 2 TB offset to check that >4G numbers can be
# used as offsets. This test shouldn't require
# 2 TB of disk space to run, since the file should be sparce.
#

. ./common.sh

# Skip this test on systems that don't support sparse files
# or large files.
case $HOST_OS in
    Darwin|Windows|OpenBSD)
        # No sparse file support on OSX or Windows, so skip
        exit 0
        ;;
    *)
        ;;
esac
case $HOST_ARCH in
    arm*)
        # Raspberry Pi and likely other 32-bit ARMs error out
	# on large files.
        exit 0
        ;;
    *)
        ;;
esac

cat >$CONFIG <<EOF
file-resource subdir/TEST {
	host-path = "${TESTFILE_150K}"
}

task complete {
	on-resource subdir/TEST { raw_write(4300000000) }
}
EOF

# Create the firmware file, then "burn it"
$FWUP_CREATE -c -f $CONFIG -o $FWFILE
$FWUP_APPLY -a -d $IMGFILE -i $FWFILE -t complete

# The firmware file is equivalent to the following dd call
dd if=$TESTFILE_150K seek=4300000000 of=$WORK/check.bin conv=sync 2>/dev/null

# diffing the files takes too long, so skip to the end
# where the interesting stuff is
cmp $WORK/check.bin $IMGFILE 2200000000000 2200000000000

# Check that the verify logic works on this file
$FWUP_VERIFY -V -i $FWFILE
